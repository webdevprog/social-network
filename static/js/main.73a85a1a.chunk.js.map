{"version":3,"sources":["redux/dialogs-reducer.js","components/Navbar/navbar.module.scss","assets/images/loader.svg","api/api.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","components/Setting/Setting.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withProfileRedirect.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormControls/FormControls.jsx","components/Users/users.module.css","components/common/Preloader/Preloader.jsx","components/Navbar/Friend/friend.module.scss","components/Header/header.module.scss","utils/validators.js","components/common/Pagination/pagination.module.scss","redux/profile-reducer.js"],"names":["initialState","dialogs","name","id","img","messages","message","sendMessage","dispatch","type","sendMessageActionCreate","dialogsReducer","state","action","newObj","textMessage","module","exports","samuraiAPI","axios","baseURL","withCredentials","headers","usersAPI","getUsers","page","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","authAPI","singInUser","login","dataLogin","logout","profileAPI","setUserProfile","userID","getStatusProfile","updateStatusProfile","status","put","friends","sidebarReducer","users","totalUsers","pageCurrent","isFetching","followingInProcess","followToggle","toggleFetching","followingProcess","usersReducer","map","user","followed","total","currentPage","filter","item","email","isAuth","setAuthUserData","payload","authUserThunkCreater","a","resultCode","authReducer","initialize","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","sidebar","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","withSuspense","Component","props","fallback","Setting","News","Music","Friend","className","cls","friend","photo","src","alt","Navbar","nav","navList","to","activeClassName","active","exact","NavbarContainer","connect","Pagination","useState","setCurrentPage","pageCount","Math","ceil","totalPages","start","endNum","endPoint","pages","push","pagination","onClick","isNaN","key","onChangePage","selectedPage","User","userPhoto","photos","large","userFollow","disabled","some","userName","Users","f","createSelector","getPageSize","getTotalUsers","getPageCurrent","getIsFetching","getFollowingInProcess","UsersContainer","usersRequest","this","Preloader","React","items","totalCount","Header","header","logo","logoImg","href","logoutUser","HeaderContainer","authUser","mapStateToPropsForRedirect","withProfileRedirect","RedirectComponent","LoginContainer","onSubmit","formData","loginUser","onLogin","Login","ReduxFormLogin","reduxForm","handleSubmit","error","createField","Input","required","stopSubmit","_error","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","component","AppContainer","promise","Promise","all","initializeSuccess","withRouter","SocialNetwork","ReactDOM","document","getElementById","FormControls","input","meta","hasError","touched","style","formControl","children","Textarea","restProps","placeholder","validation","text","validate","htmlFor","preloader","loader","value","length","undefined","maxLengthCreator","max","ADD_POST","profile","posts","countLike","setStatusProfile","getUserProfile","addPost","textPost","postText"],"mappings":"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","file":"static/js/main.73a85a1a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { name: 'Vitaiy', id: 1, img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { name: 'Sasha', id: 2, img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { name: 'Peter', id: 3, img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { name: 'Katya', id: 4, img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n    ],\r\n    messages: [\r\n        { message: \"hi, Vasya\", id: 1 },\r\n        { message: \"How are you?\", id: 2 },\r\n        { message: \"What's up man.\", id: 3 },\r\n        { message: \"Are you crazy?\", id: 4 },\r\n        { message: \"no\", id: 5 }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let newObj = {\r\n                id: 5,\r\n                message: action.message.textMessage\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newObj],\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreate = (message) => ({ type: SEND_MESSAGE, message });\r\nexport const updateTextMessageActionCreate = (text) => ({ type: UPDATE_TEXT_MESSAGE, body: text });\r\n\r\nexport const sendMessage = (message) => {\r\n    return (dispatch) => { \r\n        dispatch(sendMessageActionCreate(message));\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"navbar_sidebar__1NVx2\",\"nav\":\"navbar_nav__2WfiH\",\"navList\":\"navbar_navList__1JiJH\",\"item\":\"navbar_item__1zHrh\",\"active\":\"navbar_active__3YZ9y\",\"friends\":\"navbar_friends__IfWqY\"};","module.exports = __webpack_public_path__ + \"static/media/loader.d81a7a69.svg\";","import * as axios from \"axios\";\r\n\r\nconst samuraiAPI = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e2714baf-44ef-4f66-8332-c9d8cb5d46cc\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(page, pageSize) {\r\n        return samuraiAPI.get(`users/?page=${page}&count=${pageSize}`).\r\n            then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return samuraiAPI.post(`follow/${userId}`, {}).then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return samuraiAPI.delete(`follow/${userId}`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    singInUser() {\r\n        return samuraiAPI.get(`auth/me`);\r\n    },\r\n\r\n    login(dataLogin) {\r\n        return samuraiAPI.post(`/auth/login`, dataLogin);\r\n    },\r\n\r\n    logout() {\r\n        return samuraiAPI.delete(`/auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setUserProfile(userID) {\r\n        return samuraiAPI.get(`/profile/${userID}`);\r\n    },\r\n\r\n    getStatusProfile(userID) {\r\n        return samuraiAPI.get(`profile/status/${userID}`);\r\n    },\r\n    \r\n    updateStatusProfile(status) {\r\n        return samuraiAPI.put(`profile/status/`, { status });\r\n    }\r\n}","let initialState = {\r\n    friends: [\r\n        { id: 1, name: 'Valya', img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { id: 2, name: 'Lera', img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { id: 3, name: 'Valera', img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n        { id: 4, name: 'Anna', img: 'https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg' },\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default sidebarReducer;\r\n\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW_TOGGLE = 'users/FOLLOW_TOGGLE';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst GET_TOTAL_USERS = 'users/GET_TOTAL_USERS';\r\nconst TOGGLE_FETCHING = 'users/TOGGLE_FETCHING ';\r\nconst FOLLOWING_PROCESS = 'users/FOLLOWING_PROCESS '\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsers: 0,\r\n    pageCurrent: 1,\r\n    pageSize: 10,\r\n    isFetching: true,\r\n    followingInProcess: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_TOGGLE: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: !user.followed }\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users,]\r\n            };\r\n        }\r\n        case GET_TOTAL_USERS: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.total\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                pageCurrent: action.currentPage\r\n            };\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: !action.isFetching\r\n            };\r\n        }\r\n        case FOLLOWING_PROCESS: {\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.followingInProcess ?\r\n                    state.followingInProcess.filter(item => item !== action.userID) :\r\n                    [...state.followingInProcess, action.userID]\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const followToggle = (userId) => ({ type: FOLLOW_TOGGLE, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const getTotalUsers = (total) => ({ type: GET_TOTAL_USERS, total });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const toggleFetching = (isFetching) => ({ type: TOGGLE_FETCHING, isFetching });\r\nexport const followingProcess = (followingInProcess, userID) => ({ type: FOLLOWING_PROCESS, followingInProcess, userID });\r\n\r\nexport const getUsersThunkCreater = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleFetching(false));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleFetching(true));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(getTotalUsers(data.totalCount));\r\n\r\n    dispatch(setCurrentPage(page));\r\n}\r\n\r\nexport const followToggleThunkCreater = (followed, userId) => async (dispatch) => {\r\n    dispatch(followingProcess(false, userId));\r\n    let data = await !followed ? usersAPI.follow(userId) : usersAPI.unfollow(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(followToggle(userId));\r\n        dispatch(followingProcess(true, userId));\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = '/auth/SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: { id, login, email, isAuth } });\r\n\r\nexport const authUserThunkCreater = () => async (dispatch) => {\r\n    let response = await authAPI.singInUser();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n}\r\n\r\nexport const loginUser = (dataLogin) => async (dispatch) => {\r\n    let response = await authAPI.login(dataLogin);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUserThunkCreater());\r\n    } else {\r\n        dispatch(stopSubmit('login', { _error: \"Some error\" }));\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import { authUserThunkCreater } from \"./auth-reducer\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialize: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialize: action.initialize\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = (initialize) => ({ type: INITIALIZE_SUCCESS, initialize });\r\n\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(authUserThunkCreater());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializeSuccess(false))\r\n    })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.__store__ = store;\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nconst withSuspense = (Component) => {\r\n\r\n    const withSuspenseComponent = (props) => {\r\n        return (<Suspense fallback={<div>Loading...</div>}><Component {...props} /></Suspense>)\r\n    };\r\n\r\n    return withSuspenseComponent;\r\n}\r\n\r\nexport default withSuspense;","\r\nimport React from 'react';\r\nimport cls from './setting.module.scss';\r\n\r\nconst Setting = () => {\r\n    return (\r\n        <div>\r\n            Setting\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting;","\r\nimport React from 'react';\r\nimport classes from './news.module.scss';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","\r\nimport React from 'react';\r\nimport cls from './music.module.scss';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","\r\nimport React from 'react';\r\nimport cls from './friend.module.scss';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n       <div className={cls.friend}>\r\n         <img className={cls.photo} src={props.img} alt=\"\"/>\r\n         <div className={cls.name}>{props.name}</div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Friend;","\r\nimport React from 'react';\r\nimport cls from './navbar.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <aside className={cls.sidebar}>\r\n            <nav className={cls.nav}>\r\n                <ul className={cls.navList}>\r\n                    <li className={cls.item}>\r\n                        <NavLink to=\"/profile\" activeClassName={cls.active}>Profile</NavLink>\r\n                    </li>\r\n                    <li className={cls.item}>\r\n                        <NavLink exact to=\"/dialogs\" activeClassName={cls.active}>Messages</NavLink>\r\n                    </li>\r\n                    <li className={cls.item}>\r\n                        <NavLink to=\"/news\" activeClassName={cls.active}>News</NavLink>\r\n                    </li>\r\n                    <li className={cls.item}>\r\n                        <NavLink to=\"/music\" activeClassName={cls.active}>Music</NavLink>\r\n                    </li>\r\n                    <li className={cls.item}>\r\n                        <NavLink to=\"/setting\" activeClassName={cls.active}>Setting</NavLink>\r\n                    </li>\r\n                    <li className={cls.item}>\r\n                        <NavLink to=\"/users\" activeClassName={cls.active}>Users</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"\">\r\n                <h3>Friends</h3>\r\n                <div className={cls.friends}>\r\n                    {\r\n                        props.friends.map((friend) => (\r\n                            <Friend name={friend.name} img={friend.img} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { connect } from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport cls from './pagination.module.scss'\r\nimport { useState } from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    let pageCount = Math.ceil(props.totalPages / props.pageSize);\r\n    let start = props.pageSize * currentPage;\r\n    let endNum = Math.ceil((currentPage+1) * props.pageSize);\r\n    let endPoint = endNum >= pageCount ? pageCount : endNum;\r\n    let pages = [];\r\n\r\n    for (let page = start; page <= endPoint - 1; page++) {\r\n        pages.push(page + 1);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.pagination}>\r\n            {start > 1 ?\r\n                <button\r\n                    onClick={() => {\r\n                        const currentPageNew = start < pageCount && currentPage > 0 ? currentPage - 1 : 0;\r\n                        setCurrentPage(currentPageNew)\r\n                    }}\r\n                >Prev</button>\r\n                : ''\r\n            }\r\n\r\n            {\r\n                pages.map(page => {\r\n                    return (\r\n                        isNaN(page) ?\r\n                            <span key={pageCount + 1}>\r\n                                {page}\r\n                            </span>\r\n                            :\r\n                            <span\r\n                                key={page} onClick={() => { props.onChangePage(page) }} className={props.pageCurrent === page ? cls.selectedPage : ''}>\r\n\r\n                                {page}\r\n\r\n                            </span>\r\n                    )\r\n                })\r\n            }\r\n            {endPoint !== pageCount ?\r\n                <button onClick={() => {\r\n                    const currentPageNew = start < pageCount ? currentPage + 1 : 0;\r\n                    setCurrentPage(currentPageNew)\r\n                }}>Next</button> : ''\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport cls from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({ user, followToggle, followingInProcess }) => {\r\n\r\n    return (\r\n\r\n        <div className={cls.user}>\r\n            <div>\r\n                <NavLink to={`profile/${user.id}`}>\r\n                    <img className={cls.userPhoto} src={user.photos.large ? user.photos.large : 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png'} alt=\"\" />\r\n                </NavLink>\r\n                <button\r\n                    className={cls.userFollow}\r\n                    onClick={() => followToggle(user.followed, user.id)}\r\n                    disabled={followingInProcess.some(item => item === user.id)}\r\n                >\r\n                    {user.followed ? 'unfollow' : 'follow'}\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <h3 className={cls.userName}>{user.name}</h3>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport cls from './users.module.css';\r\nimport User from './User';\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={cls.users}>\r\n                {\r\n                    props.users.map(user => (\r\n                        <User\r\n                            user={user}\r\n                            followingInProcess={props.followingInProcess} f\r\n                            followToggle={props.followToggle}\r\n                            key={user.id}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers= createSelector(getUsersSelector, \r\n    (users) => {\r\n        return users.filter(item => true);\r\n    });\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsers = (state) => {\r\n    return state.usersPage.totalUsers;\r\n}\r\n\r\nexport const getPageCurrent = (state) => {\r\n    return state.usersPage.pageCurrent;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProcess= (state) => {\r\n    return state.usersPage.followingInProcess;\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { followToggleThunkCreater, getUsersThunkCreater } from \"../../redux/users-reducer\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Users from \"./Users\";\r\nimport {\r\n    getUsers, getPageSize, getPageCurrent,\r\n    getTotalUsers, getIsFetching, getFollowingInProcess\r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { pageCurrent, pageSize } = this.props;\r\n        this.props.usersRequest(pageCurrent, pageSize);\r\n    }\r\n\r\n    onChangePage = (page) => {\r\n        const { pageSize } = this.props;\r\n        this.props.usersRequest(page, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n\r\n                    <Preloader /> :\r\n\r\n                    <Users\r\n                        users={this.props.users}\r\n                        followToggle={this.props.followToggle}\r\n                        followingInProcess={this.props.followingInProcess}\r\n                    />\r\n                }\r\n\r\n                <Pagination\r\n                    onChangePage={this.onChangePage}\r\n                    pageCurrent={this.props.pageCurrent}\r\n                    pageSize={this.props.pageSize}\r\n                    totalPages={this.props.totalUsers}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        pageCurrent: getPageCurrent(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    followToggle: followToggleThunkCreater,\r\n    usersRequest: getUsersThunkCreater\r\n})(UsersContainer);","\r\nimport React from 'react';\r\nimport cls from './header.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={cls.header}>\r\n            <div className={cls.logo}>\r\n                <img src=\"https://cdn.pixabay.com/photo/2016/08/25/07/30/orange-1618917_960_720.png\" alt=\"\" className={cls.logoImg} />\r\n                <h1>social-network</h1>\r\n            </div>\r\n            <div className=\"login\">\r\n                {!props.isAuth ?\r\n                    <NavLink to=\"/login\">login</NavLink>\r\n                    :\r\n                    <div>\r\n                        <div>{props.login}</div>\r\n                        <a href=\"#\" onClick={props.logoutUser}>logout</a>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\nimport React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { authUserThunkCreater, logoutUser } from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authUser();\r\n    }\r\n\r\n    render() {\r\n        return (<Header {...this.props} />);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        authUser: authUserThunkCreater,\r\n        logoutUser\r\n    })\r\n)(HeaderContainer);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst withProfileRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth) return <Redirect to=\"/profile\" />\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let authRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return authRedirectComponent;\r\n}\r\n\r\nexport default withProfileRedirect;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\nimport withProfileRedirect from '../../hoc/withProfileRedirect';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators';\r\n\r\nclass LoginContainer extends React.Component {\r\n    onSubmit = (formData) => {\r\n        this.props.loginUser(formData);\r\n    }\r\n    render() {\r\n        return (\r\n            <Login onLogin={this.onSubmit} />\r\n        )\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <ReduxFormLogin onSubmit={props.onLogin} />\r\n        </div>\r\n    )\r\n}\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"email\", \"email\", Input, [required], {type: 'text'})}\r\n            {createField(\"password\", \"password\", Input, [required], {type: 'password'})}\r\n            {createField(\"\", \"rememberMe\", Input, [], {type: 'checkbox'}, \"Remember me\")}\r\n            {error && <div className={\"formSummaryError\"}>{error}</div>}\r\n            <div>\r\n                <button type=\"submit\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxFormLogin = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nexport default compose(\r\n    connect(null, {loginUser}),\r\n    withProfileRedirect\r\n)(LoginContainer);","import React, { lazy } from 'react';\r\nimport { Route, withRouter, Switch, HashRouter } from 'react-router-dom';\r\nimport './App.scss';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport withSuspense from './hoc/withSuspense';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { initialize } from './redux/app-reducer';\r\nimport Setting from './components/Setting/Setting';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initialize();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.initializeApp) return <Preloader />\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer />\r\n                <NavbarContainer />\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\r\n                    <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\r\n                    <Route path=\"/users\" render={() => <UsersContainer />} />\r\n                    <Route path=\"/news\" component={News} />\r\n                    <Route path=\"/music\" component={Music} />\r\n                    <Route path=\"/setting\" component={Setting} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        initializeApp: state.app.initialize\r\n    }\r\n}\r\n\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps, { initialize }),\r\n    withRouter\r\n)(App);\r\n\r\nconst SocialNetwork = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default SocialNetwork;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport SocialNetwork from './App';\r\n    \r\nReactDOM.render(<SocialNetwork />, document.getElementById('root'));\r\n","import React from 'react';\r\nimport style from './formControls.scss';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControls = ({ input, meta, ...props }) => {\r\n    const hasError = (meta.touched && meta.error);\r\n    return (\r\n        <div className={style.formControl}>\r\n            {props.children}\r\n            {hasError &&\r\n                <div>\r\n                    <span>{meta.error}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControls {...props}><textarea {...input} {...restProps} /></FormControls>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControls {...props}><input {...input} {...restProps} /></FormControls>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validation = [], props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} component={component} validate={validation} {...props} />\r\n            {text && <label htmlFor={name}>{text}</label>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__3ylBV\",\"user\":\"users_user__uJAzV\",\"userPhoto\":\"users_userPhoto__1z7Ri\",\"userFollow\":\"users_userFollow__1iDMh\"};","import React from 'react';\r\nimport cls from './preloader.module.scss'\r\nimport loader from '../../../assets/images/loader.svg'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={cls.preloader}>\r\n            <img src={loader} alt=\"Preloader\" />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__MHcwP\",\"photo\":\"friend_photo__16pU9\",\"name\":\"friend_name__rW30-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1qOnE\",\"logo\":\"header_logo__ppD-m\",\"logoImg\":\"header_logoImg__34Yaf\"};","export const required = (value) => (value && value.length ? undefined : \"required field\");\r\nexport const maxLengthCreator = (max) => (value) => (value && value.length < max ? undefined : `Max length ${max}`);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3UfVt\",\"selectedPage\":\"pagination_selectedPage__3an0S\"};","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD_POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS_PROFILE = 'profile/SET_STATUS_PROFILE';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status: '',\r\n    posts: [\r\n        { id: 1, message: \"Hello, everyone\", countLike: 3 },\r\n        { id: 2, message: \"Hello, everybody\", countLike: 4 },\r\n        { id: 3, message: \"This is my code.\", countLike: 8 },\r\n    ]\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newObj = {\r\n                id: 5,\r\n                message: action.textPost,\r\n                countLike: 4,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newObj]\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: { ...action.profile } };\r\n        }\r\n\r\n        case SET_STATUS_PROFILE: {\r\n            return { ...state, status: action.status };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addPostActionCreate = (textPost) => ({ type: ADD_POST, textPost });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatusProfile = (status) => ({ type: SET_STATUS_PROFILE, status });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.setUserProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatusProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatusProfile(userId);\r\n    dispatch(setStatusProfile(response.data));\r\n}\r\n\r\nexport const updateStatusProfile = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatusProfile(status);\r\n    if (response.resultCode === 0) {\r\n        dispatch(setStatusProfile(status));\r\n    }\r\n}\r\n\r\nexport const addPost = (formData) => (dispatch) => dispatch(addPostActionCreate(formData.postText));\r\n\r\nexport default profileReducer;\r\n\r\n"],"sourceRoot":""}