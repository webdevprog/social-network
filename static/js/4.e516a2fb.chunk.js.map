{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","cls","dialog","active","dialogImg","src","img","alt","name","Message","message","maxLength50","maxLengthCreator","ReduxDialogForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","type","Dialogs","dialogs","dialogsItem","map","messages","sendMessage","compose","dialogsPage","textMessage"],"mappings":"0MAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAiBZE,IAbU,SAACC,GAAe,IAC/BC,EAD8B,iLAG5B,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHhB,GACJC,IAAML,WAStC,OAF4BM,YAAQX,EAARW,CAAoCL,K,oBCjBpEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,UAAY,2BAA2B,OAAS,wBAAwB,QAAU,2B,sFCgBpMC,EAbI,SAACN,GAChB,IAAIO,EAAI,mBAAeP,EAAMQ,IAE7B,OACI,yBAAKC,UAAS,UAAKC,IAAIC,OAAT,YAAmBD,IAAIE,SACjC,kBAAC,IAAD,CAASX,GAAIM,GACT,yBAAKE,UAAWC,IAAIG,UAAWC,IAAKd,EAAMe,IAAKC,IAAI,KAClDhB,EAAMiB,QCIRC,EAXC,SAAClB,GACb,OACI,yBAAKS,UAAWC,IAAIS,SAChB,yBAAKL,IAAI,yEAAyEE,IAAI,KACtF,6BACKhB,EAAMmB,W,iCCAjBC,EAAcC,YAAiB,IAkC/BC,EAAkBC,YAAU,CAAEC,KAAM,WAAlBD,EATP,SAACvB,GACd,OACI,0BAAMyB,SAAUzB,EAAM0B,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAY,gBAAgBX,KAAK,cAAcY,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,KAChG,4BAAQa,KAAK,UAAb,YAOGC,EAlCC,SAAClC,GAEb,OACI,yBAAKS,UAAWC,IAAIyB,SAChB,yBAAK1B,UAAWC,IAAI0B,aAEZpC,EAAMmC,QAAQE,KAAI,SAAA1B,GAAM,OACpB,kBAAC,EAAD,CAAYM,KAAMN,EAAOM,KAAMT,GAAIG,EAAOH,GAAIO,IAAKJ,EAAOI,UAItE,yBAAKN,UAAWC,IAAI4B,UAEZtC,EAAMsC,SAASD,KAAI,SAAAlB,GAAO,OACtB,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASX,GAAIW,EAAQX,QAGvD,kBAACc,EAAD,CAAiBG,SAAUzB,EAAMuC,iB,iCCZlCC,sBACXrC,aAVkB,SAACV,GACnB,MAAO,CACH0C,QAAS1C,EAAMgD,YAAYN,QAC3BG,SAAU7C,EAAMgD,YAAYH,SAC5BI,YAAajD,EAAMgD,YAAYC,YAC/BhD,OAAQD,EAAME,KAAKD,UAKE,CAAC6C,kBAC1B3C,IAFW4C,CAGbN","file":"static/js/4.e516a2fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let authRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return authRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2tJ8z\",\"dialogsItem\":\"dialogs_dialogsItem__ta6UW\",\"dialog\":\"dialogs_dialog__29aTe\",\"dialogImg\":\"dialogs_dialogImg__if6xS\",\"active\":\"dialogs_active__3oiHF\",\"message\":\"dialogs_message__36Pq6\"};","import React from 'react';\r\nimport cls from '../dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={`${cls.dialog} ${cls.active}`}>\r\n            <NavLink to={path}>\r\n                <img className={cls.dialogImg} src={props.img} alt=\"\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","\r\nimport React from 'react';\r\nimport cls from './../dialogs.module.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cls.message}>\r\n            <img src=\"https://cdn.pixabay.com/photo/2016/06/14/00/14/cat-1455468_960_720.jpg\" alt=\"\" />\r\n            <div>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","\r\nimport React from 'react';\r\nimport cls from './dialogs.module.scss';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={cls.dialogs}>\r\n            <div className={cls.dialogsItem}>\r\n                {\r\n                    props.dialogs.map(dialog => (\r\n                        <DialogItem name={dialog.name} id={dialog.id} img={dialog.img} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className={cls.messages}>\r\n                {\r\n                    props.messages.map(message => (\r\n                        <Message message={message.message} id={message.id} />\r\n                    ))\r\n                }\r\n                <ReduxDialogForm onSubmit={props.sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder=\"Enter message\" name=\"textMessage\" component={Textarea} validate={[required, maxLength50]} />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ReduxDialogForm = reduxForm({ form: 'diaolog' })(DialogForm);\r\n\r\nexport default Dialogs;","\r\nimport Dialogs from './Dialogs'\r\nimport {sendMessage} from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        textMessage: state.dialogsPage.textMessage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}