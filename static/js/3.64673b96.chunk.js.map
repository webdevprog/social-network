{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/profileinfo.module.scss","components/Profile/MyPosts/Post/post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHook","useState","editMode","setMode","status","setStatus","useEffect","onDoubleClick","autoFocus","type","onBlur","updateStatus","value","onChange","e","target","ProfileInfo","profile","className","cls","profileInfo","user","avatar","src","photos","large","alt","fullName","updateStatusProfile","userInfo","name","datebirth","city","education","website","Preloader","Post","item","message","countLike","maxLength10","maxLengthCreator","ReduxFormPost","reduxForm","form","formPost","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","MyPosts","addPost","posts","map","post","id","MyPostsContainer","profilePage","Profile","ProfileContainer","userID","match","params","userId","authID","getUserProfile","getStatusProfile","compose","withRouter"],"mappings":"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","file":"static/js/3.64673b96.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let authRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return authRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileinfo_profileInfo__390Mo\",\"banner\":\"profileinfo_banner__2o6MQ\",\"user\":\"profileinfo_user__vF7_X\",\"avatar\":\"profileinfo_avatar__2MmcO\",\"userInfo\":\"profileinfo_userInfo__79qnO\",\"name\":\"profileinfo_name__3m6K8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__3JtL2\"};","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activeEditMode = () => {\r\n        setMode(true);\r\n    }\r\n\r\n    const deactiveEditMode = () => {\r\n        setMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const changeStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div onDoubleClick={activeEditMode}>\r\n                    <span>\r\n                        {status || \"````````\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} type=\"text\" \r\n                    onBlur={deactiveEditMode} \r\n                    value={status} \r\n                    onChange={changeStatus}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHook;","\r\nimport React from 'react';\r\nimport cls from './profileinfo.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={cls.profileInfo}>\r\n            <div className={cls.user}>\r\n                <div>\r\n                    <img\r\n                        className={cls.avatar}\r\n                        src={props.profile.photos.large ? props.profile.photos.large : \"https://cdn.pixabay.com/photo/2020/02/23/11/36/landscape-4873098_960_720.jpg\"}\r\n                        alt={props.profile.fullName}\r\n                    />\r\n                    <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatusProfile} />\r\n                </div>\r\n                <div className={cls.userInfo}>\r\n                    <div className={cls.name}>{props.profile.fullName}</div>\r\n                    <div className={cls.datebirth}></div>\r\n                    <div className={cls.city}>City: Kiev</div>\r\n                    <div className={cls.education}>Education: none</div>\r\n                    <div className={cls.website}>Web Site: none</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","\r\nimport React from 'react';\r\nimport cls from './post.module.scss';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={cls.item}>\r\n            <img src=\"\" alt=\"\" />\r\n            <div>{props.message}</div>\r\n            <div>\r\n                <span>like {props.countLike}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport cls from './myposts.module.scss';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>My posts</h2>\r\n            <ReduxFormPost onSubmit={props.addPost} />\r\n            <div className={cls.posts}>\r\n                {\r\n                    props.posts.map(post => (\r\n                        <Post id={post.id} message={post.message} countLike={post.countLike} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet addNewPostForm = (props) => {\r\n    return (\r\n        <form className={cls.formPost} onSubmit={props.handleSubmit}>\r\n            <Field placeholder=\"your post\" name=\"postText\" component={Textarea} validate={[required, maxLength10]} />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ReduxFormPost = reduxForm({ form: 'addNewPost' })(addNewPostForm);\r\n\r\nexport default MyPosts;","import { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","\r\nimport React from 'react';\r\nimport cls from './profile.module.scss';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatusProfile, updateStatusProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userId;\r\n\r\n        if (!userID) {\r\n            userID = this.props.authID;\r\n        }\r\n\r\n        this.props.getUserProfile(userID);\r\n        this.props.getStatusProfile(userID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authID: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatusProfile,\r\n        updateStatusProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);"],"sourceRoot":""}